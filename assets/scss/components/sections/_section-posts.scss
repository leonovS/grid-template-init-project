@use "../../presets" as *;
@use "../../mixins" as *;

.posts {
  @include lg-min {
    padding-top: 100px;
    padding-bottom: 100px;
  }

  @include lg-md {
    padding-top: 80px;
    padding-bottom: 80px;
  }

  @include md-sm {
    padding-top: 60px;
    padding-bottom: 60px;
  }

  @include sm {
    padding-top: 60px;
    padding-bottom: 60px;
  }

  &__container {
    @extend %container;
  }

  &__grid {
    display: grid;
    @include lg-min {
      grid-template-columns: repeat(4, 1fr);
      grid-template-areas: "p1 p1 p2 p3" "p4 p5 p6 p6";
    }

    @include lg-md {
      grid-template-columns: repeat(3, 1fr);
      grid-template-areas: "p1 p1 p2" "p3 p4 p4" "p5 p5 p6";
    }

    @include md-sm {
      grid-template-columns: repeat(2, 1fr);
      grid-template-areas: "p1 p2" "p3 p4" "p5 p6";
    }

    @include sm {
      grid-template-columns: repeat(1, 1fr);
      grid-template-areas: "p1" "p2" "p3" "p4" "p5" "p6";
    }

    padding-bottom: 20px;
    gap: 20px;
  }

  &__actions {
    display: flex;
    justify-content: center;
  }
}

.post-item {
  transition: background-color 0.5s;
  background-color: #f2f2f2;

  &:hover {
    background-color: #d8d8d8;

    .post-item__image img {
      transform: scale(1.1);
    }

    & h3,
    & p {
      color: darken($color-gray, $amount: 20%);
    }
  }

  &__link {
    display: grid;
    overflow: hidden;
    height: 100%;
    grid-template-rows: 300px 1fr;
  }

  &__image {
    display: flex;
    overflow: hidden;
    align-content: center;
    -webkit-box-pack: center;
    justify-content: center;
    background-color: #2d3651;

    img {
      width: 100%;
      height: 100%;

      transition: transform 0.5s;
      object-fit: cover;
    }
  }

  &__caption {
    display: grid;
    align-content: center;
    padding: 20px;

    & p {
      transition: color 0.5s;
      text-align: center;
    }

    & h3 {
      transition: color 0.5s;
      text-align: center;
      font-family: "Roboto Slab", serif;
    }
  }
}

@for $i from 1 through 6 {
  .post-item:nth-of-type(#{$i}) {
    grid-area: p#{$i};
  }
}
